clc;
clear all;
close all;
im=imread('C:\05_test.tif');    %导入图片

%% 0 掩膜mask                                行不通呀，小老弟。
% im=imread('C:\05_test.tif');                     %导入图片
% segM=imread('C:\Users\余晖\Desktop\mask.png') %掩膜图片，为透明的png图片
% s_img=size(im);
% %%change the interested area to 1
% for i=1:s_img(1)
%     for j=1:s_img(2)
%         if segM(i,j)==255
%             segM(i,j)=1;
%         end
%     end
% end
% %%deal with the R, G, B channels
% R=im(:,:,1);
% G=im(:,:,2);
% B=im(:,:,3);
% result(:,:,1)=R.*uint8(segM);
% result(:,:,2)=G.*uint8(segM);
% result(:,:,3)=B.*uint8(segM);
% %%output the result
% imwrite([output path]);
% figure;
% imshow(result);
%% 1.中值滤波
img = rgb2gray(im);
img_midFil = median_filter(img,3);  %模板的大小3*3的模板，m=3
figure;
subplot(121);
imshow(img_midFil);
title('step1. 灰度化后中值滤波');

%% 2.光均衡化处理
% 函数histeq（）进行直方图均衡化处理
J=histeq(img_midFil);  %直方图均衡化
subplot(122);
imshow((J));
title('step2. 中值滤波后光均衡化');

new = mat2gray(img_midFil);
figure;
imshow(new);
title('');

%% 3.匹配滤波
sigma=1;
yLength=8;
direction_number=15;
MF = MatchFilter(img_midFil, sigma, yLength,direction_number); %光均衡化的结果-->匹配滤波
mask=[1 1 1 1 1;
    1 1 1 1 1;
    1 1 1 1 1;
    1 1 1 1 1;
    1 1 1 1 1;];;
MF(mask==0) = 0;
MF = normalize(double(MF));
% Adding to features
features = MF;      %匹配滤波的效果图
% features2222 = MF;      %匹配滤波的效果图
figure;
imshow(features*3);
title('step3. 匹配滤波');

% threshold1 = graythresh(features)%自动确定二值化阈值
figure;
binary_data1 = im2bw(features,0.07);%对图像进行二值化,手动调参
imshow(binary_data1);

%%  4.匹配滤波之后,进行形态学操作
%%  因为step3.光均衡化后匹配滤波1的效果很差，因此不可以直接进行匹配滤波，所以要进行step4。别问为什么！

BW = im2bw(features,0.4);%用于膨胀：im2bw使用阈值变换法把灰度图像转换成二值图像;level就是设置阈值的，取值范围[0, 1]。
SE=strel('disk',1);      %用于腐蚀：disk圆形，R=1是从结构元素原点到菱形最远的距离

img_er=imerode(img_midFil,SE); %中值滤波之后，直接腐蚀
figure;
subplot(121);
imshow(2*img_er);               %乘以2是为了调整亮度，显示出来的图像看的更亮。
title('step4.1 中值滤波后图像腐蚀');

closeOp = imclose(img_er,SE);  %闭操作之后的图才会好看点，别问我为什么！
subplot(122);
imshow(closeOp);
title('step4.2 图像腐蚀后闭操作');


%% 5.二次匹配滤波 (进行了上面的形态学操作之后，再进行匹配滤波，对比两次结果知道，这次的效果更好)
sigma=2;%改变血管粗细
yLength=8;
direction_number=12;
MF = MatchFilter(closeOp, sigma, yLength,direction_number);
mask=[1 1 1 1 1;
    1 1 1 1 1;
    1 1 1 1 1;
    1 1 1 1 1;
    1 1 1 1 1;];
MF(mask==0) = 0;
MF = normalize(double(MF));
% Adding to features
features = MF;
figure;
imshow(features*2);       %乘以2是为了调整亮度，显示出来的图像看的更亮。
title('step5 闭操作后匹配滤波2'); %这个效果最好，但是仍然存在两个问题――1.轮廓 2.眼球里面有若影若现的小血管



%%  4.匹配滤波之后,进行形态学操作
%%  因为step3.光均衡化后匹配滤波1的效果很差，因此不可以直接进行匹配滤波，所以要进行step4。别问为什么！

% BW = im2bw(features,0.4);%用于膨胀：im2bw使用阈值变换法把灰度图像转换成二值图像;level就是设置阈值的，取值范围[0, 1]。
% SE=strel('disk',3);      %用于腐蚀：disk圆形，R=1是从结构元素原点到菱形最远的距离

% img_di=imdilate(features,SE); %中值滤波之后，直接腐蚀
% figure;
% imshow(2*img_di);               %乘以2是为了调整亮度，显示出来的图像看的更亮。
% title('step4.0 膨胀操作');

% open = imopen(img_di,SE);%开操作，平滑轮廓
% figure;
% imshow(open*3);
% title('开操作平滑轮廓')

% SE=strel('disk',1);      %用于腐蚀：disk圆形，R=1是从结构元素原点到菱形最远的距离
% img_er=imerode(features,SE); %中值滤波之后，直接腐蚀
% figure;
% subplot(121);
% imshow(4*img_er);               %乘以2是为了调整亮度，显示出来的图像看的更亮。
% title('step4.1 腐蚀');

% SE=strel('disk',1);      %用于腐蚀：disk圆形，R=1是从结构元素原点到菱形最远的距离
% J = imclose(img_er,SE)
% figure;
% imshow(2*J);               %乘以2是为了调整亮度，显示出来的图像看的更亮。
% title('腐蚀->imclose');

% img_er=imerode(img_midFil,SE); %中值滤波之后，直接腐蚀
% figure;
% subplot(121);
% imshow(2*img_er);               %乘以2是为了调整亮度，显示出来的图像看的更亮。
% title('step4.1 中值滤波后图像腐蚀');

% closeOp = imsubtract(features,img_er);  %闭操作之后的图才会好看点，别问我为什么！
% subplot(122);
% imshow(closeOp*3);
% title('step4.2 去除底盘');


%% 5.二次匹配滤波 (进行了上面的形态学操作之后，再进行匹配滤波，对比两次结果知道，这次的效果更好)
% sigma=2;%改变血管粗细
% yLength=15;
% direction_number=40;
% MF = MatchFilter(closeOp, sigma, yLength,direction_number);
% mask=[0 0 0 0 0;
%     0 1 1 1 0;
%     0 1 1 1 0;
%     0 1 1 1 0;
%     0 0 0 0 0;];
% MF(mask==0) = 0;
% MF = normalize(double(MF)); %归一化
% % Adding to features
% features = MF;
% figure;
% imshow(features*2);       %乘以2是为了调整亮度，显示出来的图像看的更亮。
% title('step5 闭操作后匹配滤波2'); %这个效果最好，但是仍然存在两个问题――1.轮廓 2.眼球里面有若影若现的小血管
% 

% % % m=imread('C:\05_test.tif');    %导入图片
% n = graythresh(features);%graythresh为自动确定二值化阈值函数，大于该阈值的就变成白色，小于该阈值的就变成黑色，所以阈值越大越黑，阈值越小越白
% im2bw(features,n);
% title('自适应二值化');

% 前面已经归一化了
% guiyihua=mat2gray(features);%归一化实现图像矩阵的归一化操作。使矩阵的每个元素的值都在0和1之间。
% figure;
% imshow(guiyihua*2);
% title('归一化');


%% step0    去轮廓操作
img = imread('C:\05_test.tif');
img = rgb2gray(img);
figure;imshow(img, [])
[m n] = size(img);
img_hist = zeros(1,256);
for i = 1:m
    for j = 1:n
        img_hist(img(i, j)+1) = img_hist(img(i, j)+1) + 1;
    end
end
img_hist_pro = img_hist/m/n;         %灰度级概率密度分布
sigma2_max = 0;threshold = 0;
for t = 0:255
    w0 = 0;w1 = 0; u0 = 0; u1 = 0; u = 0;
    for q = 0:255
        if q <= t
            w0 = w0 + img_hist_pro(q+1);
            u0 = u0 + (q)*img_hist_pro(q+1);
        else
            w1 = w1 + img_hist_pro(q+1);
            u1 = u1 + (q)*img_hist_pro(q+1);
        end
    end
    u = u0 + u1;
    u0 = u0 / (w0+eps);
    u1 = u1 / (w1+eps);
    sigma2 = w0 * (u0 - u)^2 + w1 * (u1 - u)^2;     %求取类间最小
    if (sigma2 > sigma2_max)
        sigma2_max = sigma2;
        threshold = t;
    end
end
img_out = img;
for i = 1:m                                         %阈值化
    for j = 1:n
        if img(i, j) >= threshold;
            img_out(i, j) = 255;
        else 
            img_out(i, j) = 0;
        end
    end
end
figure;
imshow(img_out);
title('step5去轮廓:imgOut');

double(img_out)
new_img = imsubtract(features,double(img_out));
figure;
imshow(new_img);
title('step5去掉轮廓');

threshold = graythresh(new_img)%自动确定二值化阈值,一点都不准确，别问为什么。相差太多了，不如手动调。
figure;
binary_data2 = im2bw(new_img,threshold);%对图像进行二值化,手动调参
imshow(binary_data2);
title('step5去掉轮廓二值图');

binary_data = binary_data1-binary_data2;%
figure;
imshow(binary_data);
title('结果图：去掉轮廓二值图');

% %% 高斯滤波
% w = fspecial('gaussian',[5,5],1);
% %replicate:图像大小通过赋值外边界的值来扩展
% %symmetric 图像大小通过沿自身的边界进行镜像映射扩展
% I11 = imfilter(binary_data,w,'replicate');
% figure;
% imshow(I11);
% title('step1. 灰度化后中值滤波');

%%  6 形态学操作again
SE=strel('disk',1);      %用于腐蚀：disk圆形，R=1是从结构元素原点到菱形最远的距离

img_er=imerode(binary_data,SE); %中值滤波之后，直接腐蚀
figure;
imshow(2*img_er);               %乘以2是为了调整亮度，显示出来的图像看的更亮。
title('step4.1 中值滤波后图像腐蚀');

% SE=strel('disk',1);
% figure;
% dilateOp = imdilate(img_er,SE);
% imshow(dilateOp*3);
% title('闭操作，使得断的线连接起来');

%%KD树
im = img_er;
BW=im2bw(im,0.5);
s  = regionprops(BW, 'ConvexHull');
imshow(BW);
 
[m1 ,~]=size(s(1).ConvexHull);
[m2 ,~]=size(s(2).ConvexHull);
 
len=length(s);
 
for i=1:len-1
    for j=i+1:len
        [m1 ,~]=size(s(i).ConvexHull);
        [m2 ,~]=size(s(j).ConvexHull);
        for h=1:m1
            for k=1:m2
                 
                  if  pdist([s(i).ConvexHull(h,:) ;s(j).ConvexHull(k,:)],'euclidean')<100
                      hold on;
                      plot([s(i).ConvexHull(h,1) ,s(j).ConvexHull(k,1)]  ,[s(i).ConvexHull(h,2) ,s(j).ConvexHull(k,2)],'r');
                  end
            end
        end
    end
end

% closeOp = imclose(img_er,SE);  %闭操作之后的图才会好看点，别问我为什么！
% subplot(122);
% imshow(closeOp);
% title('step4.2 图像腐蚀后闭操作');